apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'
//apply plugin: 'jetty'

sourceCompatibility = 1.7
version = '1.0'

buildscript {
  repositories {
    jcenter()
    // enable this to use snapshot versions of Gretty:
    // maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}
apply plugin: 'org.akhikhl.gretty'

repositories {
  mavenCentral()
  maven{
	  url 'https://raw.github.com/julman99/mvn-repo/master'
  }
  jcenter()
}

dependencies {
  providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
  providedCompile 'javax.servlet.jsp:jsp-api:2.1'
  providedCompile 'javax.inject:javax.inject:1'
  compile "org.liquibase:liquibase-core:3.3.+"
  compile "org.yaml:snakeyaml:1.14"
  compile "commons-dbcp:commons-dbcp:1.4"
  compile "org.hibernate:hibernate-entitymanager:4.3.7.Final"
  compile "org.hibernate:hibernate-search-orm:4.5.2.Final"
  compile "com.google.code.gson:gson:2.3.1"
  compile "commons-beanutils:commons-beanutils:1.9.2"
  compile "com.google.guava:guava:18.0"
  compile "com.github.julman99:gson-fire:0.11.0"
  compile "org.hibernate:hibernate-validator:5.1.3.Final"

  /*
   * For some reason, gretty do not load these. Weird huh?
   */
  gretty "commons-dbcp:commons-dbcp:1.4"

  /*
   * In my case, the postgresql driver is not loaded. But including it in dependency is not 
   * very 'clean' as it should be db independent. So I link the jar in jettyJar folder
   */
  gretty fileTree('jettyJar'){
	  include '**/*.jar'
  }
}

gretty {
  servletContainer 'jetty9'
  contextConfigFile = file("jetty-env.xml")

}

task(test2) << {
  println project.sourceSets.main.runtimeClasspath.files.toString()
}

